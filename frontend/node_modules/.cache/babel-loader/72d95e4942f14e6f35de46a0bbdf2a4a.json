{"ast":null,"code":"import _ from \"lodash\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CURRENT':\n      return { ...state,\n        current: action.new_current\n      };\n\n    case 'FILL':\n      return { ...state,\n        data: action.new_data\n      };\n\n    case 'CHANGE_SORT':\n      if (state.column === action.column) {\n        return { ...state,\n          data: state.data.slice().reverse(),\n          direction: state.direction === 'ascending' ? 'descending' : 'ascending'\n        };\n      }\n\n      return {\n        column: action.column,\n        data: _.sortBy(state.data, [action.column]),\n        direction: 'ascending'\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/darthvader/Documents/Cadence/display_data/frontend/src/reducers/fetch_reducer.js"],"names":["_","reducer","state","action","type","current","new_current","data","new_data","column","slice","reverse","direction","sortBy","Error"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAFX,OAAP;;AAIF,SAAK,MAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,IAAI,EAAEJ,MAAM,CAACK;AAFR,OAAP;;AAIF,SAAK,aAAL;AACE,UAAIN,KAAK,CAACO,MAAN,KAAiBN,MAAM,CAACM,MAA5B,EAAoC;AAClC,eAAO,EACL,GAAGP,KADE;AAELK,UAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWG,KAAX,GAAmBC,OAAnB,EAFD;AAGLC,UAAAA,SAAS,EACPV,KAAK,CAACU,SAAN,KAAoB,WAApB,GAAkC,YAAlC,GAAiD;AAJ9C,SAAP;AAMD;;AAED,aAAO;AACLH,QAAAA,MAAM,EAAEN,MAAM,CAACM,MADV;AAELF,QAAAA,IAAI,EAAEP,CAAC,CAACa,MAAF,CAASX,KAAK,CAACK,IAAf,EAAqB,CAACJ,MAAM,CAACM,MAAR,CAArB,CAFD;AAGLG,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF;AACE,YAAM,IAAIE,KAAJ,EAAN;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeb,OAAf","sourcesContent":["import _ from \"lodash\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CURRENT':\n      return {\n        ...state,\n        current: action.new_current,\n      }\n    case 'FILL':\n      return {\n        ...state,\n        data: action.new_data,\n      }\n    case 'CHANGE_SORT':\n      if (state.column === action.column) {\n        return {\n          ...state,\n          data: state.data.slice().reverse(),\n          direction:\n            state.direction === 'ascending' ? 'descending' : 'ascending',\n        }\n      }\n\n      return {\n        column: action.column,\n        data: _.sortBy(state.data, [action.column]),\n        direction: 'ascending',\n      }\n    default:\n      throw new Error()\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}